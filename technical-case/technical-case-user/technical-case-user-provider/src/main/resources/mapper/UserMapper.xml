<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chenze.technicalcase.user.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.chenze.technicalcase.user.model.entity.User">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="enabled" jdbcType="TINYINT" property="enabled"/>
        <result column="account_non_expired" jdbcType="TINYINT" property="accountNonExpired"/>
        <result column="credentials_non_expired" jdbcType="TINYINT" property="credentialsNonExpired"/>
        <result column="account_non_locked" jdbcType="TINYINT" property="accountNonLocked"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        id,
        username,
        `password`,
        enabled,
        account_non_expired,
        credentials_non_expired,
        account_non_locked,
        create_time,
        update_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from user
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insertSelective" keyColumn="id" keyProperty="id"
            parameterType="com.chenze.technicalcase.user.model.entity.User" useGeneratedKeys="true">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                `password`,
            </if>
            <if test="enabled != null">
                enabled,
            </if>
            <if test="accountNonExpired != null">
                account_non_expired,
            </if>
            <if test="credentialsNonExpired != null">
                credentials_non_expired,
            </if>
            <if test="accountNonLocked != null">
                account_non_locked,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="enabled != null">
                #{enabled,jdbcType=TINYINT},
            </if>
            <if test="accountNonExpired != null">
                #{accountNonExpired,jdbcType=TINYINT},
            </if>
            <if test="credentialsNonExpired != null">
                #{credentialsNonExpired,jdbcType=TINYINT},
            </if>
            <if test="accountNonLocked != null">
                #{accountNonLocked,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.chenze.technicalcase.user.model.entity.User">
        update user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                `password` = #{password,jdbcType=VARCHAR},
            </if>
            <if test="enabled != null">
                enabled = #{enabled,jdbcType=TINYINT},
            </if>
            <if test="accountNonExpired != null">
                account_non_expired = #{accountNonExpired,jdbcType=TINYINT},
            </if>
            <if test="credentialsNonExpired != null">
                credentials_non_expired = #{credentialsNonExpired,jdbcType=TINYINT},
            </if>
            <if test="accountNonLocked != null">
                account_non_locked = #{accountNonLocked,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
        insert into user
        (username, `password`, enabled, account_non_expired, credentials_non_expired, account_non_locked,
         create_time, update_time)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.username,jdbcType=VARCHAR}, #{item.password,jdbcType=VARCHAR}, #{item.enabled,jdbcType=TINYINT},
             #{item.accountNonExpired,jdbcType=TINYINT}, #{item.credentialsNonExpired,jdbcType=TINYINT},
             #{item.accountNonLocked,jdbcType=TINYINT}, #{item.createTime,jdbcType=TIMESTAMP},
             #{item.updateTime,jdbcType=TIMESTAMP})
        </foreach>
    </insert>

    <select id="selectByUsername" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where username = #{username,jdbcType=VARCHAR}
    </select>

</mapper>